coreNodeSelector: &coreNodeSelector
  hub.jupyter.org/node-purpose: core

jupyterhub:
  proxy:
    nodeSelector: *coreNodeSelector
    service:
      type: ClusterIP
  ingress:
    enabled: true
    annotations:
      ingress.kubernetes.io/proxy-body-size: 64m
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - simula.minrk.net
    tls:
      - secretName: kubelego-tls-jupyterhub
        hosts:
          - simula.minrk.net

  singleuser:
    cmd: jupyter-labhub
    events: true
    storage:
      homeMountPath: /home/user
    image:
      name: gcr.io/simula-summer-school-202212/simula-summer-school
      tag: "2021"
      pullPolicy: Always
    memory:
      limit: 2G
      guarantee: 1G
    cpu:
      limit: 2
      guarantee: 0.5
    schedulerStrategy: pack
    extraEnv:
      CULL_CONNECTED: "1"
      CULL_TIMEOUT: "1800"
      CULL_KERNEL_TIMEOUT: "1800"
      CULL_INTERVAL: "120"

  prePuller:
    continuous:
      enabled: true

  hub:
    nodeSelector: *coreNodeSelector
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: /hub/metrics
    config:
      JupyterHub:
        authenticate_prometheus: false
        admin_access: true

  scheduling:
    userScheduler:
      enabled: true
    podPriority:
      enabled: true
    userPlaceholder:
      enabled: true
      replicas: 3
    userPods:
      nodeAffinity:
        matchNodePurpose: prefer
    corePods:
      nodeAffinity:
        matchNodePurpose: require

grafana:
  nodeSelector: *coreNodeSelector
  grafana.ini:
    auth.anonymous:
      enabled: true
      org_name: Main Org.
      org_role: Viewer
    auth.basic:
      enabled: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - grafana.simula.minrk.net
    tls:
      - hosts:
          - grafana.simula.minrk.net
        secretName: kubelego-tls-grafana
  persistence:
    size: 2Gi
    enabled: true
    accessModes:
      - ReadWriteOnce
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus
          orgId: 1
          type: prometheus
          url: https://prometheus.simula.minrk.net
          access: direct
          isDefault: true
          editable: false

prometheus:
  nodeSelector: *coreNodeSelector
  nodeExporter:
    updateStrategy:
      type: RollingUpdate
  alertmanager:
    enabled: false
  pushgateway:
    enabled: false
  rbac:
    create: true
  server:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
      hosts:
        - prometheus.simula.minrk.net
      tls:
        - hosts:
            - prometheus.simula.minrk.net
          secretName: kubelego-tls-prometheus

kube-lego:
  config:
    LEGO_EMAIL: benjaminrk@simula.no
    LEGO_URL: https://acme-v01.api.letsencrypt.org/directory
  rbac:
    create: true

nginx-ingress:
  nodeSelector: *coreNodeSelector
  rbac:
    create: true
  statsExporter:
    service:
      annotations:
        prometheus.io/scrape: "true"
  controller:
    replicaCount: 2
    scope:
      enabled: true
    config:
      # Allow POSTs of upto 64MB, for large notebook support.
      proxy-body-size: 64m
    stats:
      enabled: true
    service:
      # Preserve client IPs
      externalTrafficPolicy: Local
